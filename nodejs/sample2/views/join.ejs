<%-include('header.ejs') %>


<div class="container">
  <div class="text-center">
    <div class="box box-primary">
      <div class="box-header with-border">
  
      <h3>회원가입</h3>
        <form role="form" id="joinForm" method="post" action="/join_ok">
          <div class="box-body">
          <div class="form-group row">
            <label for="mbsp_id" class="col-2">아이디</label>
            <div class="col-7">
              <input type="text" class="form-control" name="m_id" id="m_id" placeholder="아이디 입력">
            </div>
            <div class="col-2">
              <button type="button" id="idCheck"> 아이디 중복 체크</button>
            </div>
          </div>
          <div class="form-group row">
            <label for="mbsp_password" class="col-2">비밀번호</label>
            <div class="col-4">
              <input type="password" class="form-control" name="m_pwd" id="m_pwd" placeholder="비밀번호 입력">
            </div>
          </div>
          <div class="form-group row">
            <label for="mbsp_name" class="col-2">이름</label>
            <div class="col-10">
              <input type="text" class="form-control" name="m_name" id="m_name" placeholder="이름">
            </div>
          </div>
          <div class="form-group row">
            <label for="sample2_postcode" class="col-2">우편번호</label>
            <div class="col-7">
              <input type="text" class="form-control" name="m_zipcode" id="sample2_postcode" placeholder="우편번호">
            </div>
            <div class="col-3">
              <button type="button" onclick="sample2_execDaumPostcode()" class="btn btn-outline-primary">우편번호 검색</button>
            </div>
          </div>
          <div class="form-group row">
            <label for="sample2_address" class="col-2">기본주소</label>
            <div class="col-10">
              <input type="text" class="form-control" name="m_addr" id="sample2_address" placeholder="기본주소">
            </div>
          </div>
          <div class="form-group row">
            <label for="sample2_detailAddress" class="col-2">상세주소</label>
            <div class="col-10">
              <input type="text" class="form-control" name="m_addrdetail" id="sample2_detailAddress" placeholder="상세주소">
              <input type="hidden" id="sample2_extraAddress" placeholder="참고항목">
            </div>
          </div>
          <div class="box-footer">
            <button type="submit" class="btn btn-primary" id="btnJoin">가입하기</button>
            <button type="reset" class="btn btn-primary" id="btnReset">초기화</button>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>


</div>
<script> 

  /* 
    1)<input type='button'> 자신을 클릭이벤트 설정
    2)<button type='submit'> form태그의 submit이벤트 설정
  */
  // 회원가입 전송(submit) 클릭 시 
  document.getElementById('joinForm').addEventListener("submit" , (e) => {
    // 서브밋기능 취소
    e.preventDefault();

    // 회원가입 유효성 검사 작업.

    // jquery ajax 기능 사용하지 않고 fetch() 메소드 사용
    const m_id = document.getElementById("m_id").value;
    const m_pwd = document.getElementById("m_pwd").value;
    const m_name = document.getElementById("m_name").value;
    const m_zipcode = document.getElementById("sample2_postcode").value;
    const m_addr = document.getElementById("sample2_address").value;
    const m_addrdetail = document.getElementById("sample2_detailAddress").value;
    
    console.log(m_pwd)
    fetch('/join_ok', {
      method : 'post',
      headers : {
        'Content-Type' : 'application/json'
      },
      body : JSON.stringify({m_id ,m_pwd, m_name, m_zipcode, m_addr, m_addrdetail})
    }).then(response => response.json())
    .then(data => {
      console.log("data : " , data);
      if(data.msg == 'success') {
        alert('회원가입 완료.');
        location.href='/login';
      }else {
        alert('회원가입 실패. 다시 시도해주세요');
      }
    })
    .catch(err => {
      console.error('에러', err);
    })
  })

  // 아이디 중복체크
  document.getElementById("idCheck").addEventListener("click", ()=> {
    const m_id = document.getElementById('m_id').value;

    fetch('/idcheck', {
      method : 'post',
      headers : {
        'Content-Type' : 'application/json'
      },
      body : JSON.stringify({m_id})
    }).then(response => response.json())
    .then(data => {
      if(data.msg == 'yes') {
        alert('아이디 사용 가능')
        document.getElementById('m_name').focus();
      }else {
        alert("아이디사용불가");
        document.getElementById("m_id").value = "";
        document.getElementById("m_id").focus();
      }
    }).catch(err => {
      console.error('에러', err);
    })
  })

</script>

  
  <!-- iOS에서는 position:fixed 버그가 있음, 적용하는 사이트에 맞게 position:absolute 등을 이용하여 top,left값 조정 필요 -->
<div id="layer" style="display:none;position:fixed;overflow:hidden;z-index:1;-webkit-overflow-scrolling:touch;">
  <img src="//t1.daumcdn.net/postcode/resource/images/close.png" id="btnCloseLayer" style="cursor:pointer;position:absolute;right:-3px;top:-3px;z-index:1" onclick="closeDaumPostcode()" alt="닫기 버튼">
  </div>
  
  <script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
  <script>
      // 우편번호 찾기 화면을 넣을 element
      var element_layer = document.getElementById('layer');
  
      function closeDaumPostcode() {
          // iframe을 넣은 element를 안보이게 한다.
          element_layer.style.display = 'none';
      }
  
      function sample2_execDaumPostcode() {
          new daum.Postcode({
              oncomplete: function(data) {
                  // 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.
  
                  // 각 주소의 노출 규칙에 따라 주소를 조합한다.
                  // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                  var addr = ''; // 주소 변수
                  var extraAddr = ''; // 참고항목 변수
  
                  //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                  if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                      addr = data.roadAddress;
                  } else { // 사용자가 지번 주소를 선택했을 경우(J)
                      addr = data.jibunAddress;
                  }
  
                  // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.
                  if(data.userSelectedType === 'R'){
                      // 법정동명이 있을 경우 추가한다. (법정리는 제외)
                      // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
                      if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){
                          extraAddr += data.bname;
                      }
                      // 건물명이 있고, 공동주택일 경우 추가한다.
                      if(data.buildingName !== '' && data.apartment === 'Y'){
                          extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                      }
                      // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
                      if(extraAddr !== ''){
                          extraAddr = ' (' + extraAddr + ')' ;
                      }
                      // 조합된 참고항목을 해당 필드에 넣는다.
                      document.getElementById("sample2_extraAddress").value = extraAddr;
                  
                  } else {
                      document.getElementById("sample2_extraAddress").value = '';
                  }
  
                  // 우편번호와 주소 정보를 해당 필드에 넣는다.
                  document.getElementById('sample2_postcode').value = data.zonecode;
                  document.getElementById("sample2_address").value = addr;
                  // 커서를 상세주소 필드로 이동한다.
                  document.getElementById("sample2_detailAddress").focus();
  
                  // iframe을 넣은 element를 안보이게 한다.
                  // (autoClose:false 기능을 이용한다면, 아래 코드를 제거해야 화면에서 사라지지 않는다.)
                  element_layer.style.display = 'none';
              },
              width : '100%',
              height : '100%',
              maxSuggestItems : 5
          }).embed(element_layer);
  
          // iframe을 넣은 element를 보이게 한다.
          element_layer.style.display = 'block';
  
          // iframe을 넣은 element의 위치를 화면의 가운데로 이동시킨다.
          initLayerPosition();
      }
  
      // 브라우저의 크기 변경에 따라 레이어를 가운데로 이동시키고자 하실때에는
      // resize이벤트나, orientationchange이벤트를 이용하여 값이 변경될때마다 아래 함수를 실행 시켜 주시거나,
      // 직접 element_layer의 top,left값을 수정해 주시면 됩니다.
      function initLayerPosition(){
          var width = 300; //우편번호서비스가 들어갈 element의 width
          var height = 400; //우편번호서비스가 들어갈 element의 height
          var borderWidth = 5; //샘플에서 사용하는 border의 두께
  
          // 위에서 선언한 값들을 실제 element에 넣는다.
          element_layer.style.width = width + 'px';
          element_layer.style.height = height + 'px';
          element_layer.style.border = borderWidth + 'px solid';
          // 실행되는 순간의 화면 너비와 높이 값을 가져와서 중앙에 뜰 수 있도록 위치를 계산한다.
          element_layer.style.left = (((window.innerWidth || document.documentElement.clientWidth) - width)/2 - borderWidth) + 'px';
          element_layer.style.top = (((window.innerHeight || document.documentElement.clientHeight) - height)/2 - borderWidth) + 'px';
      }
  </script>



<script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
<script>window.jQuery || document.write('<script src="https://getbootstrap.com/docs/4.6/assets/js/vendor/jquery.slim.min.js"><\/script>')</script><script src="https://getbootstrap.com/docs/4.6/dist/js/bootstrap.bundle.min.js" integrity="sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct" crossorigin="anonymous"></script>


</body>
</html>